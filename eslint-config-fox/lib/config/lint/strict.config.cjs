/**
 * Enable rules that could prevent
 * potentially buggy code
 */
module.exports = {
  default: {
    globals: {
      document: 'readonly',
      navigator: 'readonly',
      window: 'readonly',
    },
    rules: {
      'no-await-in-loop': 'error',
      // TODO: eslint 7
      // 'no-useless-backreference': 'error',
      'array-callback-return': ['error', { allowImplicit: true }],
      'block-scoped-var': 'error',
      complexity: ['error', { max: 18 }],
      // TODO: eslint 7
      // 'default-case-last': 'error',
      'dot-location': ['error', 'property'],
      'max-classes-per-file': ['error', 2],
      'no-constructor-return': 'error',
      'no-extend-native': 'error',
      'no-extra-bind': 'error',
      'no-invalid-this': 'error',
      'no-new': 'error',
      'no-self-assign': ['error', { props: true }],
      'no-self-compare': 'error',
      'no-unmodified-loop-condition': 'error',
      'no-useless-call': 'error',
      'no-useless-concat': 'error',
      'no-useless-return': 'error',
      'prefer-promise-reject-errors': ['error', { allowEmptyReject: false }],
      'wrap-iife': ['error', 'inside', { functionPrototypeMethods: false }],
      yoda: ['error', 'never', { exceptRange: true, onlyEquality: false }],
      'no-eval': 'error',
      'no-template-curly-in-string': 'error',
      'dot-notation': ['error', { allowKeywords: true }],
      'no-floating-decimal': 'error',
      'no-labels': ['error', { allowLoop: false, allowSwitch: false }],
      'no-label-var': 'error',
      'no-restricted-globals': [
        'error',
        'isFinite',
        'isNaN',
        'addEventListener',
        'blur',
        'close',
        'closed',
        'confirm',
        'defaultStatus',
        'defaultstatus',
        'event',
        'external',
        'find',
        'focus',
        'frameElement',
        'frames',
        'history',
        'innerHeight',
        'innerWidth',
        'length',
        'location',
        'locationbar',
        'menubar',
        'moveBy',
        'moveTo',
        'name',
        'onblur',
        'onerror',
        'onfocus',
        'onload',
        'onresize',
        'onunload',
        'open',
        'opener',
        'opera',
        'outerHeight',
        'outerWidth',
        'pageXOffset',
        'pageYOffset',
        'parent',
        'print',
        'removeEventListener',
        'resizeBy',
        'resizeTo',
        'screen',
        'screenLeft',
        'screenTop',
        'screenX',
        'screenY',
        'scroll',
        'scrollbars',
        'scrollBy',
        'scrollTo',
        'scrollX',
        'scrollY',
        'self',
        'status',
        'statusbar',
        'stop',
        'toolbar',
        'top',
      ],
      'no-undef-init': 'error',
      'no-use-before-define': [
        'error',
        { functions: false, classes: false, variables: false },
      ],
      'object-shorthand': [
        'error',
        'always',
        // {
        //   avoidQuotes: true,
        //   ignoreConstructors: false,
        //   avoidExplicitReturnArrows: false,
        //   consistent: false,
        // },
      ],
      'class-methods-use-this': ['error', { exceptMethods: [] }],
      'default-case': ['error', { commentPattern: '^no default$' }],
      'no-caller': 'error',
      'no-alert': 'error',
      'no-case-declarations': 'error',
      'no-global-assign': ['error', { exceptions: [] }],
      'no-implicit-coercion': [
        'off',
        {
          boolean: false,
          number: true,
          string: true,
          allow: [],
        },
      ],
      'no-implied-eval': 'error',
      'no-magic-numbers': [
        'error',
        // {
        //   ignore: [],
        //   ignoreArrayIndexies: true,
        //   enforceConst: true,
        //   detectObjects: false,
        // },
      ],
      'no-new-func': 'error',
      'no-new-wrappers': 'error',
      'no-proto': 'error',
      'no-restricted-properties': [
        'error',
        {
          object: 'arguments',
          property: 'callee',
          message: 'arguments.callee is deprecated',
        },
        {
          object: 'global',
          property: 'isFinite',
          message: 'Please use Number.isFinite instead',
        },
        {
          object: 'self',
          property: 'isFinite',
          message: 'Please use Number.isFinite instead',
        },
        {
          object: 'globalThis',
          property: 'isFinite',
          message: 'Please use Number.isFinite instead',
        },
        {
          object: 'window',
          property: 'isFinite',
          message: 'Please use Number.isFinite instead',
        },
        {
          object: 'global',
          property: 'isNaN',
          message: 'Please use Number.isNaN instead',
        },
        {
          object: 'self',
          property: 'isNaN',
          message: 'Please use Number.isNaN instead',
        },
        {
          object: 'globalThis',
          property: 'isNan',
          message: 'Please use Number.isNaN instead',
        },
        {
          object: 'window',
          property: 'isNaN',
          message: 'Please use Number.isNaN instead',
        },
        {
          property: '__defineGetter__',
          message: 'Please use Object.defineProperty instead.',
        },
        {
          property: '__defineSetter__',
          message: 'Please use Object.defineProperty instead.',
        },
      ],
      'no-script-url': 'error',
      'no-useless-catch': 'error',
      'no-useless-escape': 'error',
      'no-with': 'error',
      'for-direction': 'error',
      'getter-return': ['error', { allowImplicit: true }],
      'no-async-promise-executor': 'error',
      'no-cond-assign': ['error', 'always'],
      'no-constant-condition': ['error', { checkLoops: true }],
      'no-control-regex': 'error',
      'no-extra-boolean-cast': 'error',
      'no-setter-return': 'error',
      'no-sparse-arrays': 'error',
      'arrow-body-style': [
        'error',
        'as-needed',
        {
          requireReturnForObjectLiteral: false,
        },
      ],
      'no-useless-rename': [
        'error',
        {
          ignoreDestructuring: false,
          ignoreImport: false,
          ignoreExport: false,
        },
      ],
      'require-yield': 'error',
      'symbol-description': 'warn',
      'no-undef': 'error',
      'callback-return': ['error', ['callback', 'cb', 'next']],
      'handle-callback-err': ['error', '^(err|error|^.+Error|^.+Err)$'],
      'no-buffer-constructor': 'error',
      'no-path-concat': 'error',
      'no-process-exit': 'error',
      'prefer-exponentiation-operator': 'error',
    },
  },
  /**
   * TODO: maybe make it so that it shows as 'off' in the editor,
   * 'warnn' in the webpack console, and 'error', for production
   */
  isNotProd: {
    rules: {
      'no-empty-function': [
        'off',
        {
          allow: ['arrow-functions', 'functions', 'methods'],
        },
      ],
      'no-extra-label': 'off',
      'no-lone-blocks': 'off',
      'no-unused-vars': 'off',
      'no-duplicate-imports': 'off',
      'no-useless-constructor': 'off',
      'no-empty': 'off',
      'no-console': 'off',
    },
  },
  isProd: {
    rules: {
      'no-empty-function': [
        'error',
        {
          allow: ['arrow-functions', 'functions', 'methods'],
        },
      ],
      'no-extra-label': 'error',
      'no-lone-blocks': 'error',
      'no-unused-vars': [
        'error',
        { vars: 'all', args: 'none', ignoreRestSiblings: true },
      ],
      'no-duplicate-imports': 'error',
      'no-useless-constructor': 'error',
      'no-empty': ['error', { allowEmptyCatch: false }],
      'no-console': 'error',
    },
  },
}
